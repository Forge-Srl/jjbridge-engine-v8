name: Release JJBridge V8 Engine

on:
  push:
    tags:
      - 'release/**'

jobs:
  build_and_test_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-android-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-android-m2
      - name: Cache Android ndk
        uses: actions/cache@v2
        with:
          path: tools/ndk
          key: android-ndk-${{ hashFiles('**/build_Android.sh') }}
          restore-keys: android-ndk
      - name: Build and test
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: mvn -B verify --file pom.xml -P !Common,Android,Linux
      - name: Get jar to release
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: target/jjbridge-engine-v8-*.aar

  build_and_test_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and test
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: mvn -B verify --file pom.xml -P Common,Linux
      - name: Get jar to release
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: |
            target/jjbridge-engine-v8-*-linux.jar
            target/jjbridge-engine-v8-*-javadoc.jar

  build_and_test_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and test
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: mvn -B verify --file pom.xml -P Common,macOS
      - name: Get jar to release
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: target/jjbridge-engine-v8-*-macos.jar

  build_and_test_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and test
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: mvn -B verify --file pom.xml -P Common,Windows
      - name: Get jar to release
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: target/jjbridge-engine-v8-*-windows.jar

  release_current_version:
    runs-on: ubuntu-latest
    needs: [build_and_test_android, build_and_test_linux, build_and_test_macos, build_and_test_windows]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: actions/download-artifact@v2
        with:
          name: android
          path: target
      - uses: actions/download-artifact@v2
        with:
          name: linux
          path: target
      - uses: actions/download-artifact@v2
        with:
          name: macos
          path: target
      - uses: actions/download-artifact@v2
        with:
          name: windows
          path: target
      - name: Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          mvn -B deploy --file pom.xml -P Common,!Linux -Dexec.skip -Dmaven.main.skip -Dmaven.test.skip -Dassembly.skipAssembly -Dcheckstyle.skip -Dspotbugs.skip